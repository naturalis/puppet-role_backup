#!/bin/bash
#
# MySQL Backup Script
#  Dumps mysql databases to a file for another backup tool to pick up.
#
# MySQL code:
# GRANT SELECT, RELOAD, LOCK TABLES ON *.* TO 'user'@'localhost'
# IDENTIFIED BY 'password';
# FLUSH PRIVILEGES;
#
##### START CONFIG ###################################################

USER=<%= @mysqlbackupuser %>
PASS=<%= @mysqlbackuppassword %>
DIR=<%= @backuprootfolder %>/mysql
PREFIX=mysql


##### STOP CONFIG ####################################################
PATH=/usr/bin:/usr/sbin:/bin:/sbin

set -o pipefail

<% if @mysqlbackuppassword != "" -%>
  PASS="-p${PASS}"
<% end -%>

<% if @mysqlalldatabases == true -%>
  <% if @mysqlfileperdatabase == true -%>
    mysql -u${USER} ${PASS} -s -r -N -e 'SHOW DATABASES' | while read dbname
    do
    mysqldump -u${USER} ${PASS} --opt --flush-logs --single-transaction \
      ${EVENTS} \
      ${dbname} | gzip -c > ${DIR}/${PREFIX}_${dbname}.sql.gz
    done
  <% else -%>
    mysqldump -u${USER} ${PASS} --opt --flush-logs --single-transaction --all-databases | gzip -c > ${DIR}/${PREFIX}.sql.gz
  <% end -%>
<% else -%>
  <% if @mysqlfileperdatabase == true -%>
    <% @mysqldatabasearray.each do |db| -%>
      mysqldump -u${USER} ${PASS} --opt --flush-logs --single-transaction --databases <%=db %> | gzip -c > ${DIR}/${PREFIX}_<%=db %>.sql.gz
    <% end -%>
  <% else -%>
    mysqldump -u${USER} ${PASS} --opt --flush-logs --single-transaction --databases <% @mysqldatabasearray.each do |db| -%><%=db %> <% end -%> | gzip -c > ${DIR}/${PREFIX}.sql.gz
  <% end -%>
<% end -%>





